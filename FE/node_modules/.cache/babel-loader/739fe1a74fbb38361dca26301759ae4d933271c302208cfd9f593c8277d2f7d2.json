{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport http from \"@/api/http\";\nimport router from \"@/router\";\nexport default {\n  components: {},\n  data() {\n    return {\n      message: \"\"\n    };\n  },\n  computed: {\n    memberId() {\n      return this.$store.getters.getMemberId;\n    },\n    planTitle() {\n      return this.$store.getters.getPlanTitle;\n    },\n    planDesc() {\n      return this.$store.getters.getPlanDesc;\n    },\n    planStartDate() {\n      return this.$store.getters.getPlanStartDate;\n    },\n    planEndDate() {\n      return this.$store.getters.getPlanEndDate;\n    },\n    planHashtag() {\n      return this.$store.getters.getPlanHashtag;\n    },\n    attractionList() {\n      return this.$store.getters.getTempAttractionList;\n    }\n    // addAttId() {\n    //   return this.$store.getters.getAddAttId;\n    // },\n  },\n\n  mounted() {\n    // console.log(this.addAttId);\n    // const attr = [];\n    // for (let i = 0; i < this.addAttId.length; i++) {\n    //   console.log(this.addAttId[i]);\n    //   http\n    //     .get(`/attraction/${this.addAttId[i]}`, {\n    //       headers: {\n    //         Authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\"),\n    //       },\n    //     })\n    //     .then((resp) => {\n    //       attr.push(resp.data);\n    //       console.log(attr);\n    //     })\n    //     .catch((error) => {\n    //       console.log(error);\n    //       alert(\"플랜 삭제를 실패하였습니다.\");\n    //     });\n    // }\n    // this.$store.dispatch(\"addAttraction\", attr);\n    // // this.attractionList.push(attr[i]);\n    // console.log(this.attractionList);\n  },\n  methods: {\n    remove(num) {\n      return this.$store.dispatch(\"removeAttraction\", num);\n    },\n    removePlan() {\n      http.delete(\"/plan/\" + this.$route.params.id, {\n        headers: {\n          Authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\")\n        }\n      }).then(resp => {\n        console.log(resp);\n        router.push({\n          name: \"planlist\"\n        });\n      }).catch(error => {\n        console.log(error);\n        alert(\"플랜 삭제를 실패하였습니다.\");\n      });\n    },\n    modify() {\n      http.put(\"/plan/update\", {\n        planId: this.$route.params.id,\n        memberId: this.memberId,\n        planTitle: this.planTitle,\n        startDate: this.planStartDate,\n        endDate: this.planEndDate,\n        planDescription: this.planDesc,\n        attractions: this.attractionList,\n        hashtags: this.planHashtag\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\")\n        }\n      }).then(resp => {\n        console.log(resp);\n        router.push({\n          name: \"planlist\"\n        });\n      }).catch(error => {\n        console.log(error.data);\n        alert(\"플랜 수정을 실패하였습니다.\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["http","router","components","data","message","computed","memberId","$store","getters","getMemberId","planTitle","getPlanTitle","planDesc","getPlanDesc","planStartDate","getPlanStartDate","planEndDate","getPlanEndDate","planHashtag","getPlanHashtag","attractionList","getTempAttractionList","mounted","methods","remove","num","dispatch","removePlan","delete","$route","params","id","headers","Authorization","sessionStorage","getItem","then","resp","console","log","push","name","catch","error","alert","modify","put","planId","startDate","endDate","planDescription","attractions","hashtags"],"sources":["src/components/board/Plan/plan-item/PlanModifyItem.vue"],"sourcesContent":["<template>\n  <div\n    class=\"container-fluid d-flex flex-column border flex-shrink-0 p-3 bg-light\"\n    id=\"back\"\n    style=\"width: 100%; height: 100vh\"\n  >\n    <h2>나의 플랜</h2>\n    <hr />\n    <div class=\"list-group list-group-flush border-bottom scrollarea\">\n      <b-row class=\"my-1\">\n        <b-col sm=\"5\"> 제목: </b-col>\n        <b-col sm=\"7\">\n          {{ planTitle }}\n        </b-col>\n        <b-col sm=\"5\"> 설명: </b-col>\n        <b-col sm=\"7\">\n          {{ planDesc }}\n        </b-col>\n        <b-col sm=\"5\"> 시작일: </b-col>\n        <b-col sm=\"7\">\n          {{ planStartDate }}\n        </b-col>\n        <b-col sm=\"5\"> 종료일: </b-col>\n        <b-col sm=\"7\">\n          {{ planEndDate }}\n        </b-col>\n      </b-row>\n      <b-button\n        class=\"btn btn-outline-light btn-lg\"\n        style=\"background-color: orange; border-color: orange\"\n        size=\"sm\"\n        @click=\"modify\"\n        >수정</b-button\n      >\n      <b-button\n        class=\"btn btn-outline-light btn-lg mt-1\"\n        style=\"background-color: orange; border-color: orange\"\n        size=\"sm\"\n        @click=\"removePlan\"\n        >삭제</b-button\n      >\n    </div>\n    <hr />\n    <b-row class=\"mt-3\" v-for=\"(att, idx) in attractionList\" :key=\"idx\">\n      <b-col>{{ idx + 1 }}</b-col>\n      <b-col class=\"text-center\">{{ att.title }}</b-col>\n      <b-col\n        ><b-button\n          id=\"btnArea\"\n          class=\"btn btn-outline-light btn-lg\"\n          style=\"background-color: orange; border-color: orange\"\n          size=\"sm\"\n          @click=\"remove(idx)\"\n          >삭제</b-button\n        ></b-col\n      >\n    </b-row>\n  </div>\n</template>\n\n<script>\nimport http from \"@/api/http\";\nimport router from \"@/router\";\n\nexport default {\n  components: {},\n  data() {\n    return {\n      message: \"\",\n    };\n  },\n  computed: {\n    memberId() {\n      return this.$store.getters.getMemberId;\n    },\n    planTitle() {\n      return this.$store.getters.getPlanTitle;\n    },\n    planDesc() {\n      return this.$store.getters.getPlanDesc;\n    },\n    planStartDate() {\n      return this.$store.getters.getPlanStartDate;\n    },\n    planEndDate() {\n      return this.$store.getters.getPlanEndDate;\n    },\n    planHashtag() {\n      return this.$store.getters.getPlanHashtag;\n    },\n    attractionList() {\n      return this.$store.getters.getTempAttractionList;\n    },\n    // addAttId() {\n    //   return this.$store.getters.getAddAttId;\n    // },\n  },\n  mounted() {\n    // console.log(this.addAttId);\n    // const attr = [];\n    // for (let i = 0; i < this.addAttId.length; i++) {\n    //   console.log(this.addAttId[i]);\n    //   http\n    //     .get(`/attraction/${this.addAttId[i]}`, {\n    //       headers: {\n    //         Authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\"),\n    //       },\n    //     })\n    //     .then((resp) => {\n    //       attr.push(resp.data);\n    //       console.log(attr);\n    //     })\n    //     .catch((error) => {\n    //       console.log(error);\n    //       alert(\"플랜 삭제를 실패하였습니다.\");\n    //     });\n    // }\n    // this.$store.dispatch(\"addAttraction\", attr);\n    // // this.attractionList.push(attr[i]);\n    // console.log(this.attractionList);\n  },\n  methods: {\n    remove(num) {\n      return this.$store.dispatch(\"removeAttraction\", num);\n    },\n    removePlan() {\n      http\n        .delete(\"/plan/\" + this.$route.params.id, {\n          headers: {\n            Authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\"),\n          },\n        })\n        .then((resp) => {\n          console.log(resp);\n          router.push({ name: \"planlist\" });\n        })\n        .catch((error) => {\n          console.log(error);\n          alert(\"플랜 삭제를 실패하였습니다.\");\n        });\n    },\n    modify() {\n      http\n        .put(\n          \"/plan/update\",\n          {\n            planId: this.$route.params.id,\n            memberId: this.memberId,\n            planTitle: this.planTitle,\n            startDate: this.planStartDate,\n            endDate: this.planEndDate,\n            planDescription: this.planDesc,\n            attractions: this.attractionList,\n            hashtags: this.planHashtag,\n          },\n          {\n            headers: {\n              Authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\"),\n            },\n          }\n        )\n        .then((resp) => {\n          console.log(resp);\n          router.push({ name: \"planlist\" });\n        })\n        .catch((error) => {\n          console.log(error.data);\n          alert(\"플랜 수정을 실패하였습니다.\");\n        });\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"],"mappings":";AA6DA,OAAAA,IAAA;AACA,OAAAC,MAAA;AAEA;EACAC,UAAA;EACAC,KAAA;IACA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACAC,SAAA;MACA,YAAAC,MAAA,CAAAC,OAAA,CAAAC,WAAA;IACA;IACAC,UAAA;MACA,YAAAH,MAAA,CAAAC,OAAA,CAAAG,YAAA;IACA;IACAC,SAAA;MACA,YAAAL,MAAA,CAAAC,OAAA,CAAAK,WAAA;IACA;IACAC,cAAA;MACA,YAAAP,MAAA,CAAAC,OAAA,CAAAO,gBAAA;IACA;IACAC,YAAA;MACA,YAAAT,MAAA,CAAAC,OAAA,CAAAS,cAAA;IACA;IACAC,YAAA;MACA,YAAAX,MAAA,CAAAC,OAAA,CAAAW,cAAA;IACA;IACAC,eAAA;MACA,YAAAb,MAAA,CAAAC,OAAA,CAAAa,qBAAA;IACA;IACA;IACA;IACA;EACA;;EACAC,QAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACA;EACAC,OAAA;IACAC,OAAAC,GAAA;MACA,YAAAlB,MAAA,CAAAmB,QAAA,qBAAAD,GAAA;IACA;IACAE,WAAA;MACA3B,IAAA,CACA4B,MAAA,iBAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;QACAC,OAAA;UACAC,aAAA,cAAAC,cAAA,CAAAC,OAAA;QACA;MACA,GACAC,IAAA,CAAAC,IAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,IAAA;QACApC,MAAA,CAAAuC,IAAA;UAAAC,IAAA;QAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAL,OAAA,CAAAC,GAAA,CAAAI,KAAA;QACAC,KAAA;MACA;IACA;IACAC,OAAA;MACA7C,IAAA,CACA8C,GAAA,CACA,gBACA;QACAC,MAAA,OAAAlB,MAAA,CAAAC,MAAA,CAAAC,EAAA;QACAzB,QAAA,OAAAA,QAAA;QACAI,SAAA,OAAAA,SAAA;QACAsC,SAAA,OAAAlC,aAAA;QACAmC,OAAA,OAAAjC,WAAA;QACAkC,eAAA,OAAAtC,QAAA;QACAuC,WAAA,OAAA/B,cAAA;QACAgC,QAAA,OAAAlC;MACA,GACA;QACAc,OAAA;UACAC,aAAA,cAAAC,cAAA,CAAAC,OAAA;QACA;MACA,CACA,EACAC,IAAA,CAAAC,IAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,IAAA;QACApC,MAAA,CAAAuC,IAAA;UAAAC,IAAA;QAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAL,OAAA,CAAAC,GAAA,CAAAI,KAAA,CAAAxC,IAAA;QACAyC,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}