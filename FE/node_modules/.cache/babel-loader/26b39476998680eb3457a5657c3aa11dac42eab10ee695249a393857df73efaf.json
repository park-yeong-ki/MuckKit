{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport http from \"@/api/http\";\nimport router from \"@/router\";\nexport default {\n  components: {},\n  data() {\n    return {\n      memberId: \"\",\n      authCode: \"\",\n      validAuthCode: null,\n      memberName: \"\",\n      memberPw: \"\",\n      memberPhone: \"\",\n      confirmPw: \"\",\n      isSamePw: null,\n      message: \"이메일 인증 코드\"\n    };\n  },\n  created() {},\n  methods: {\n    checkPassword() {\n      if (this.memberPw === this.confirmPw) {\n        this.isSamePw = true;\n      } else {\n        this.isSamePw = false;\n      }\n    },\n    joinMember() {\n      if (this.validMemberId && this.validMemberPw && this.validAuthCode && this.validMemberName && this.validMemberPhone) {\n        http.post(\"/member/join\", {\n          memberId: this.memberId,\n          memberName: this.memberName,\n          memberPw: this.memberPw,\n          memberPhone: this.memberPhone\n        }).then(resp => {\n          console.log(resp);\n          alert(\"회원가입이 성공되었습니다\");\n          router.push({\n            name: \"main\"\n          });\n        }).catch(error => {\n          console.log(error);\n          alert(\"회원가입이 실패하였습니다.\");\n          router.push({\n            name: \"main\"\n          });\n        });\n      } else {\n        alert(\"회원가입 양식을 올바르게 입력해주세요.\");\n      }\n    },\n    emailSend() {\n      http.post(\"/member/join/send-mail\", {\n        memberId: this.memberId\n      }).then(resp => {\n        console.log(resp);\n        this.message = \"인증 코드가 발송되었습니다.\";\n      }).catch(resp => {\n        console.log(resp);\n      });\n    },\n    verifyCode() {\n      http.post(\"/member/join/auth-code\", {\n        memberId: this.memberId,\n        authCode: this.authCode\n      }).then(resp => {\n        console.log(resp);\n        this.validAuthCode = true;\n      }).catch(error => {\n        console.log(error);\n        this.validAuthCode = false;\n      });\n    }\n  },\n  watch: {\n    confirmPw: function () {\n      this.checkPassword();\n    }\n  },\n  computed: {\n    validMemberId() {\n      if (this.memberId === \"\") {\n        return null;\n      }\n      let regex = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\n      return regex.test(this.memberId);\n    },\n    validMemberPw() {\n      if (this.memberPw === \"\") {\n        return null;\n      }\n      return this.memberPw.length > 3 && this.memberPw.length < 20;\n    },\n    validMemberName() {\n      if (this.memberName === \"\") {\n        return null;\n      }\n      return this.memberName.length > 0 && this.memberName.length < 10;\n    },\n    validMemberPhone() {\n      if (this.memberPhone === \"\") {\n        return null;\n      }\n      let regPhone = /^[0-9]{2,3}-[0-9]{3,4}-[0-9]{4}$/;\n      return regPhone.test(this.memberPhone);\n    }\n  }\n};","map":{"version":3,"names":["http","router","components","data","memberId","authCode","validAuthCode","memberName","memberPw","memberPhone","confirmPw","isSamePw","message","created","methods","checkPassword","joinMember","validMemberId","validMemberPw","validMemberName","validMemberPhone","post","then","resp","console","log","alert","push","name","catch","error","emailSend","verifyCode","watch","computed","regex","test","length","regPhone"],"sources":["src/components/user/UserRegist.vue"],"sourcesContent":["<template>\r\n  <div class=\"container col-xl-10 col-xxl-8 px-4 py-5\">\r\n    <div class=\"row align-items-center py-5\">\r\n      <!-- <div class=\"col-lg-7 text-center text-lg-start\"></div> -->\r\n      <div class=\"col-md-10 mx-auto col-lg-6\">\r\n        <h1 class=\"display-4 fw-bold lh-1 text-body-emphasis mb-3\">회원가입</h1>\r\n        <form class=\"p-4 p-md-5 border rounded-3 bg-body-tertiary\">\r\n          <b-container fluid>\r\n            <b-row class=\"my-4\">\r\n              <b-col>\r\n                <b-form-input\r\n                  id=\"input-none\"\r\n                  placeholder=\"이메일\"\r\n                  v-model=\"memberId\"\r\n                  :state=\"validMemberId\"\r\n                ></b-form-input>\r\n              </b-col>\r\n              <button\r\n                class=\"btn btn-sm\"\r\n                type=\"button\"\r\n                style=\"background-color: orange\"\r\n                @click=\"emailSend\"\r\n              >\r\n                인증코드 받기\r\n              </button>\r\n            </b-row>\r\n            <b-row class=\"my-4\">\r\n              <b-col>\r\n                <b-form-input\r\n                  id=\"input-none\"\r\n                  :placeholder=\"message\"\r\n                  v-model=\"authCode\"\r\n                  :state=\"validAuthCode\"\r\n                ></b-form-input>\r\n              </b-col>\r\n              <button\r\n                class=\"btn btn-sm\"\r\n                style=\"background-color: orange\"\r\n                type=\"button\"\r\n                @click=\"verifyCode\"\r\n              >\r\n                인증 하기\r\n              </button>\r\n            </b-row>\r\n            <b-row class=\"my-4\">\r\n              <b-col>\r\n                <b-form-input\r\n                  id=\"input-none\"\r\n                  :state=\"validMemberPw\"\r\n                  placeholder=\"비밀번호\"\r\n                  type=\"password\"\r\n                  v-model=\"memberPw\"\r\n                ></b-form-input>\r\n              </b-col>\r\n            </b-row>\r\n            <b-row class=\"my-4\">\r\n              <b-col>\r\n                <b-form-input\r\n                  id=\"input-none\"\r\n                  :state=\"isSamePw\"\r\n                  placeholder=\"비밀번호 확인\"\r\n                  v-model=\"confirmPw\"\r\n                  type=\"password\"\r\n                ></b-form-input>\r\n              </b-col>\r\n            </b-row>\r\n            <b-row class=\"my-4\">\r\n              <b-col>\r\n                <b-form-input\r\n                  id=\"input-none\"\r\n                  :state=\"validMemberName\"\r\n                  placeholder=\"이름\"\r\n                  v-model=\"memberName\"\r\n                ></b-form-input>\r\n              </b-col>\r\n            </b-row>\r\n            <b-row class=\"my-4\">\r\n              <b-col>\r\n                <b-form-input\r\n                  id=\"input-none\"\r\n                  :state=\"validMemberPhone\"\r\n                  placeholder=\"연락처\"\r\n                  v-model=\"memberPhone\"\r\n                  type=\"tel\"\r\n                ></b-form-input>\r\n              </b-col>\r\n            </b-row>\r\n          </b-container>\r\n          <button\r\n            class=\"w-100 btn btn-lg\"\r\n            style=\"background-color: orange\"\r\n            @click=\"joinMember\"\r\n            type=\"button\"\r\n          >\r\n            가입하기\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport http from \"@/api/http\";\r\nimport router from \"@/router\";\r\n\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      memberId: \"\",\r\n      authCode: \"\",\r\n      validAuthCode: null,\r\n      memberName: \"\",\r\n      memberPw: \"\",\r\n      memberPhone: \"\",\r\n      confirmPw: \"\",\r\n      isSamePw: null,\r\n      message: \"이메일 인증 코드\",\r\n    };\r\n  },\r\n  created() {},\r\n  methods: {\r\n    checkPassword() {\r\n      if (this.memberPw === this.confirmPw) {\r\n        this.isSamePw = true;\r\n      } else {\r\n        this.isSamePw = false;\r\n      }\r\n    },\r\n    joinMember() {\r\n      if (\r\n        this.validMemberId &&\r\n        this.validMemberPw &&\r\n        this.validAuthCode &&\r\n        this.validMemberName &&\r\n        this.validMemberPhone\r\n      ) {\r\n        http\r\n          .post(\"/member/join\", {\r\n            memberId: this.memberId,\r\n            memberName: this.memberName,\r\n            memberPw: this.memberPw,\r\n            memberPhone: this.memberPhone,\r\n          })\r\n          .then((resp) => {\r\n            console.log(resp);\r\n            alert(\"회원가입이 성공되었습니다\");\r\n            router.push({ name: \"main\" });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            alert(\"회원가입이 실패하였습니다.\");\r\n            router.push({ name: \"main\" });\r\n          });\r\n      } else {\r\n        alert(\"회원가입 양식을 올바르게 입력해주세요.\");\r\n      }\r\n    },\r\n    emailSend() {\r\n      http\r\n        .post(\"/member/join/send-mail\", {\r\n          memberId: this.memberId,\r\n        })\r\n        .then((resp) => {\r\n          console.log(resp);\r\n          this.message = \"인증 코드가 발송되었습니다.\";\r\n        })\r\n        .catch((resp) => {\r\n          console.log(resp);\r\n        });\r\n    },\r\n    verifyCode() {\r\n      http\r\n        .post(\"/member/join/auth-code\", {\r\n          memberId: this.memberId,\r\n          authCode: this.authCode,\r\n        })\r\n        .then((resp) => {\r\n          console.log(resp);\r\n          this.validAuthCode = true;\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          this.validAuthCode = false;\r\n        });\r\n    },\r\n  },\r\n  watch: {\r\n    confirmPw: function () {\r\n      this.checkPassword();\r\n    },\r\n  },\r\n  computed: {\r\n    validMemberId() {\r\n      if (this.memberId === \"\") {\r\n        return null;\r\n      }\r\n      let regex =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n      return regex.test(this.memberId);\r\n    },\r\n    validMemberPw() {\r\n      if (this.memberPw === \"\") {\r\n        return null;\r\n      }\r\n      return this.memberPw.length > 3 && this.memberPw.length < 20;\r\n    },\r\n    validMemberName() {\r\n      if (this.memberName === \"\") {\r\n        return null;\r\n      }\r\n      return this.memberName.length > 0 && this.memberName.length < 10;\r\n    },\r\n    validMemberPhone() {\r\n      if (this.memberPhone === \"\") {\r\n        return null;\r\n      }\r\n      let regPhone = /^[0-9]{2,3}-[0-9]{3,4}-[0-9]{4}$/;\r\n      return regPhone.test(this.memberPhone);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"],"mappings":";AAuGA,OAAAA,IAAA;AACA,OAAAC,MAAA;AAEA;EACAC,UAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,aAAA;MACAC,UAAA;MACAC,QAAA;MACAC,WAAA;MACAC,SAAA;MACAC,QAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;EACAC,OAAA;IACAC,cAAA;MACA,SAAAP,QAAA,UAAAE,SAAA;QACA,KAAAC,QAAA;MACA;QACA,KAAAA,QAAA;MACA;IACA;IACAK,WAAA;MACA,IACA,KAAAC,aAAA,IACA,KAAAC,aAAA,IACA,KAAAZ,aAAA,IACA,KAAAa,eAAA,IACA,KAAAC,gBAAA,EACA;QACApB,IAAA,CACAqB,IAAA;UACAjB,QAAA,OAAAA,QAAA;UACAG,UAAA,OAAAA,UAAA;UACAC,QAAA,OAAAA,QAAA;UACAC,WAAA,OAAAA;QACA,GACAa,IAAA,CAAAC,IAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,IAAA;UACAG,KAAA;UACAzB,MAAA,CAAA0B,IAAA;YAAAC,IAAA;UAAA;QACA,GACAC,KAAA,CAAAC,KAAA;UACAN,OAAA,CAAAC,GAAA,CAAAK,KAAA;UACAJ,KAAA;UACAzB,MAAA,CAAA0B,IAAA;YAAAC,IAAA;UAAA;QACA;MACA;QACAF,KAAA;MACA;IACA;IACAK,UAAA;MACA/B,IAAA,CACAqB,IAAA;QACAjB,QAAA,OAAAA;MACA,GACAkB,IAAA,CAAAC,IAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,IAAA;QACA,KAAAX,OAAA;MACA,GACAiB,KAAA,CAAAN,IAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,IAAA;MACA;IACA;IACAS,WAAA;MACAhC,IAAA,CACAqB,IAAA;QACAjB,QAAA,OAAAA,QAAA;QACAC,QAAA,OAAAA;MACA,GACAiB,IAAA,CAAAC,IAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,IAAA;QACA,KAAAjB,aAAA;MACA,GACAuB,KAAA,CAAAC,KAAA;QACAN,OAAA,CAAAC,GAAA,CAAAK,KAAA;QACA,KAAAxB,aAAA;MACA;IACA;EACA;EACA2B,KAAA;IACAvB,SAAA,WAAAA,CAAA;MACA,KAAAK,aAAA;IACA;EACA;EACAmB,QAAA;IACAjB,cAAA;MACA,SAAAb,QAAA;QACA;MACA;MACA,IAAA+B,KAAA,GACA;MACA,OAAAA,KAAA,CAAAC,IAAA,MAAAhC,QAAA;IACA;IACAc,cAAA;MACA,SAAAV,QAAA;QACA;MACA;MACA,YAAAA,QAAA,CAAA6B,MAAA,aAAA7B,QAAA,CAAA6B,MAAA;IACA;IACAlB,gBAAA;MACA,SAAAZ,UAAA;QACA;MACA;MACA,YAAAA,UAAA,CAAA8B,MAAA,aAAA9B,UAAA,CAAA8B,MAAA;IACA;IACAjB,iBAAA;MACA,SAAAX,WAAA;QACA;MACA;MACA,IAAA6B,QAAA;MACA,OAAAA,QAAA,CAAAF,IAAA,MAAA3B,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}