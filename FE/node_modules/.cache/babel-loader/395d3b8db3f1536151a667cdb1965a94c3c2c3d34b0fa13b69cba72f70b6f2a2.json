{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport http from \"@/api/http\";\nimport router from \"@/router\";\nexport default {\n  components: {},\n  data() {\n    return {\n      message: \"\"\n    };\n  },\n  computed: {\n    memberId() {\n      return this.$store.getters.getMemberId;\n    },\n    planTitle() {\n      return this.$store.getters.getPlanTitle;\n    },\n    planDesc() {\n      return this.$store.getters.getPlanDesc;\n    },\n    planStartDate() {\n      return this.$store.getters.getPlanStartDate;\n    },\n    planEndDate() {\n      return this.$store.getters.getPlanEndDate;\n    },\n    planHashtag() {\n      return this.$store.getters.getPlanHashtag;\n    },\n    attractionList() {\n      return this.$store.getters.getTempAttractionList;\n    }\n  },\n  created() {},\n  methods: {\n    remove(num) {\n      return this.$store.dispatch(\"removeAttraction\", num);\n    },\n    regist() {\n      http.post(\"/plan/write\", {\n        memberId: this.memberId,\n        planTitle: this.planTitle,\n        startDate: this.planStartDate,\n        endDate: this.planEndDate,\n        planDescription: this.planDesc,\n        attractions: this.attractionList,\n        hashtags: this.planHashtag\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\")\n        }\n      }).then(resp => {\n        console.log(resp);\n        router.push({\n          name: \"planlist\"\n        });\n      }).catch(error => {\n        console.log(error.data);\n        alert(\"플랜 작성을 실패하였습니다.\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["http","router","components","data","message","computed","memberId","$store","getters","getMemberId","planTitle","getPlanTitle","planDesc","getPlanDesc","planStartDate","getPlanStartDate","planEndDate","getPlanEndDate","planHashtag","getPlanHashtag","attractionList","getTempAttractionList","created","methods","remove","num","dispatch","regist","post","startDate","endDate","planDescription","attractions","hashtags","headers","Authorization","sessionStorage","getItem","then","resp","console","log","push","name","catch","error","alert"],"sources":["src/components/board/Plan/plan-item/PlanAttractionList.vue"],"sourcesContent":["<template>\r\n  <div\r\n    class=\"container-fluid d-flex flex-column border flex-shrink-0 p-3 bg-light\"\r\n    id=\"back\"\r\n    style=\"width: 100%; height: 100vh\"\r\n  >\r\n    <h2>나의 플랜</h2>\r\n    <hr />\r\n    <div class=\"list-group list-group-flush border-bottom scrollarea\">\r\n      <b-row class=\"my-1\">\r\n        <b-col sm=\"5\"> 제목: </b-col>\r\n        <b-col sm=\"7\">\r\n          {{ planTitle }}\r\n        </b-col>\r\n        <b-col sm=\"5\"> 설명: </b-col>\r\n        <b-col sm=\"7\">\r\n          {{ planDesc }}\r\n        </b-col>\r\n        <b-col sm=\"5\"> 시작일: </b-col>\r\n        <b-col sm=\"7\">\r\n          {{ planStartDate }}\r\n        </b-col>\r\n        <b-col sm=\"5\"> 종료일: </b-col>\r\n        <b-col sm=\"7\">\r\n          {{ planEndDate }}\r\n        </b-col>\r\n      </b-row>\r\n      <b-button\r\n        class=\"btn btn-outline-light btn-lg\"\r\n        style=\"background-color: orange; border-color: orange\"\r\n        size=\"sm\"\r\n        @click=\"regist\"\r\n        >등록하기</b-button\r\n      >\r\n    </div>\r\n    <hr />\r\n    <b-row class=\"mt-3\" v-for=\"(att, idx) in attractionList\" :key=\"idx\">\r\n      <b-col>{{ idx + 1 }}</b-col>\r\n      <b-col class=\"text-center\">{{ att.title }}</b-col>\r\n      <b-col\r\n        ><b-button\r\n          id=\"btnArea\"\r\n          class=\"btn btn-outline-light btn-lg\"\r\n          style=\"background-color: orange; border-color: orange\"\r\n          size=\"sm\"\r\n          @click=\"remove(idx)\"\r\n          >삭제</b-button\r\n        ></b-col\r\n      >\r\n    </b-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport http from \"@/api/http\";\r\nimport router from \"@/router\";\r\n\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      message: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    memberId() {\r\n      return this.$store.getters.getMemberId;\r\n    },\r\n    planTitle() {\r\n      return this.$store.getters.getPlanTitle;\r\n    },\r\n    planDesc() {\r\n      return this.$store.getters.getPlanDesc;\r\n    },\r\n    planStartDate() {\r\n      return this.$store.getters.getPlanStartDate;\r\n    },\r\n    planEndDate() {\r\n      return this.$store.getters.getPlanEndDate;\r\n    },\r\n    planHashtag() {\r\n      return this.$store.getters.getPlanHashtag;\r\n    },\r\n    attractionList() {\r\n      return this.$store.getters.getTempAttractionList;\r\n    },\r\n  },\r\n  created() {},\r\n  methods: {\r\n    remove(num) {\r\n      return this.$store.dispatch(\"removeAttraction\", num);\r\n    },\r\n    regist() {\r\n      http\r\n        .post(\r\n          \"/plan/write\",\r\n          {\r\n            memberId: this.memberId,\r\n            planTitle: this.planTitle,\r\n            startDate: this.planStartDate,\r\n            endDate: this.planEndDate,\r\n            planDescription: this.planDesc,\r\n            attractions: this.attractionList,\r\n            hashtags: this.planHashtag,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\"),\r\n            },\r\n          }\r\n        )\r\n        .then((resp) => {\r\n          console.log(resp);\r\n          router.push({ name: \"planlist\" });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.data);\r\n          alert(\"플랜 작성을 실패하였습니다.\");\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"],"mappings":";AAsDA,OAAAA,IAAA;AACA,OAAAC,MAAA;AAEA;EACAC,UAAA;EACAC,KAAA;IACA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACAC,SAAA;MACA,YAAAC,MAAA,CAAAC,OAAA,CAAAC,WAAA;IACA;IACAC,UAAA;MACA,YAAAH,MAAA,CAAAC,OAAA,CAAAG,YAAA;IACA;IACAC,SAAA;MACA,YAAAL,MAAA,CAAAC,OAAA,CAAAK,WAAA;IACA;IACAC,cAAA;MACA,YAAAP,MAAA,CAAAC,OAAA,CAAAO,gBAAA;IACA;IACAC,YAAA;MACA,YAAAT,MAAA,CAAAC,OAAA,CAAAS,cAAA;IACA;IACAC,YAAA;MACA,YAAAX,MAAA,CAAAC,OAAA,CAAAW,cAAA;IACA;IACAC,eAAA;MACA,YAAAb,MAAA,CAAAC,OAAA,CAAAa,qBAAA;IACA;EACA;EACAC,QAAA;EACAC,OAAA;IACAC,OAAAC,GAAA;MACA,YAAAlB,MAAA,CAAAmB,QAAA,qBAAAD,GAAA;IACA;IACAE,OAAA;MACA3B,IAAA,CACA4B,IAAA,CACA,eACA;QACAtB,QAAA,OAAAA,QAAA;QACAI,SAAA,OAAAA,SAAA;QACAmB,SAAA,OAAAf,aAAA;QACAgB,OAAA,OAAAd,WAAA;QACAe,eAAA,OAAAnB,QAAA;QACAoB,WAAA,OAAAZ,cAAA;QACAa,QAAA,OAAAf;MACA,GACA;QACAgB,OAAA;UACAC,aAAA,cAAAC,cAAA,CAAAC,OAAA;QACA;MACA,CACA,EACAC,IAAA,CAAAC,IAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,IAAA;QACAtC,MAAA,CAAAyC,IAAA;UAAAC,IAAA;QAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAL,OAAA,CAAAC,GAAA,CAAAI,KAAA,CAAA1C,IAAA;QACA2C,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}