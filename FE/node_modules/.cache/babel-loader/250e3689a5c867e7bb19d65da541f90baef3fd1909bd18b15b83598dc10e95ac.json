{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport http from \"@/api/http\";\nimport router from \"@/router\";\nexport default {\n  components: {},\n  data() {\n    return {\n      noticeContent: \"\",\n      noticeTitle: \"\"\n    };\n  },\n  created() {},\n  methods: {\n    write() {\n      if (this.noticeTitle && this.noticeContent) {\n        http.post(\"/notice/writeNotice\", {\n          noticeTitle: this.noticeTitle,\n          noticeWriter: this.getMemberId,\n          noticeContent: this.noticeContent\n        }, {\n          headers: {\n            Authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\")\n          }\n        }).then(resp => {\n          console.log(resp);\n          alert(\"공지를 등록했습니다.\");\n          router.push({\n            name: \"noticelist\"\n          });\n        }).catch(error => {\n          console.log(error);\n          alert(\"공지를 등록하지 못했습니다.\");\n        });\n      } else {\n        alert(\"올바른 입력을 해주세요.\");\n      }\n    }\n  },\n  computed: {\n    getMemberId() {\n      return this.$store.getters.getMemberId;\n    }\n  }\n};","map":{"version":3,"names":["http","router","components","data","noticeContent","noticeTitle","created","methods","write","post","noticeWriter","getMemberId","headers","Authorization","sessionStorage","getItem","then","resp","console","log","alert","push","name","catch","error","computed","$store","getters"],"sources":["src/components/board/Notice/NoticeWrite.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <b-row class=\"mb-1\">\r\n      <b-col style=\"text-align: left\">\r\n        <b-form-group id=\"userid-group\" label=\"작성자:\" label-for=\"userid\">\r\n          <b-form-input\r\n            id=\"userid\"\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"작성자를 입력하세요.\"\r\n            :value=\"getMemberId\"\r\n            :readonly=\"true\"\r\n          ></b-form-input>\r\n        </b-form-group>\r\n\r\n        <b-form-group id=\"subject-group\" label=\"제목:\" label-for=\"subject\">\r\n          <b-form-input\r\n            id=\"subject\"\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"제목을 입력하세요.\"\r\n            v-model=\"noticeTitle\"\r\n          ></b-form-input>\r\n        </b-form-group>\r\n\r\n        <b-form-group id=\"content-group\" label=\"내용:\" label-for=\"content\">\r\n          <b-form-textarea\r\n            id=\"content\"\r\n            placeholder=\"내용을 입력하세요.\"\r\n            rows=\"10\"\r\n            max-rows=\"15\"\r\n            v-model=\"noticeContent\"\r\n          ></b-form-textarea>\r\n        </b-form-group>\r\n\r\n        <div class=\"text-right\">\r\n          <router-link :to=\"{ name: 'notice' }\"\r\n            ><b-button\r\n              id=\"btn\"\r\n              class=\"btn btn-lg\"\r\n              style=\"background-color: orange; border-color: orange\"\r\n              >취소</b-button\r\n            ></router-link\r\n          >\r\n\r\n          <b-button\r\n            id=\"btn\"\r\n            class=\"btn btn-lg\"\r\n            style=\"background-color: orange; border-color: orange\"\r\n            @click=\"write\"\r\n            >등록</b-button\r\n          >\r\n        </div>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport http from \"@/api/http\";\r\nimport router from \"@/router\";\r\n\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      noticeContent: \"\",\r\n      noticeTitle: \"\",\r\n    };\r\n  },\r\n  created() {},\r\n  methods: {\r\n    write() {\r\n      if (this.noticeTitle && this.noticeContent) {\r\n        http\r\n          .post(\r\n            \"/notice/writeNotice\",\r\n            {\r\n              noticeTitle: this.noticeTitle,\r\n              noticeWriter: this.getMemberId,\r\n              noticeContent: this.noticeContent,\r\n            },\r\n            {\r\n              headers: {\r\n                Authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\"),\r\n              },\r\n            }\r\n          )\r\n          .then((resp) => {\r\n            console.log(resp);\r\n            alert(\"공지를 등록했습니다.\");\r\n            router.push({ name: \"noticelist\" });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            alert(\"공지를 등록하지 못했습니다.\");\r\n          });\r\n      } else {\r\n        alert(\"올바른 입력을 해주세요.\");\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    getMemberId() {\r\n      return this.$store.getters.getMemberId;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#btn {\r\n  margin-right: 20px;\r\n}\r\n</style>\r\n"],"mappings":";AA2DA,OAAAA,IAAA;AACA,OAAAC,MAAA;AAEA;EACAC,UAAA;EACAC,KAAA;IACA;MACAC,aAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;EACAC,OAAA;IACAC,MAAA;MACA,SAAAH,WAAA,SAAAD,aAAA;QACAJ,IAAA,CACAS,IAAA,CACA,uBACA;UACAJ,WAAA,OAAAA,WAAA;UACAK,YAAA,OAAAC,WAAA;UACAP,aAAA,OAAAA;QACA,GACA;UACAQ,OAAA;YACAC,aAAA,cAAAC,cAAA,CAAAC,OAAA;UACA;QACA,CACA,EACAC,IAAA,CAAAC,IAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,IAAA;UACAG,KAAA;UACAnB,MAAA,CAAAoB,IAAA;YAAAC,IAAA;UAAA;QACA,GACAC,KAAA,CAAAC,KAAA;UACAN,OAAA,CAAAC,GAAA,CAAAK,KAAA;UACAJ,KAAA;QACA;MACA;QACAA,KAAA;MACA;IACA;EACA;EACAK,QAAA;IACAd,YAAA;MACA,YAAAe,MAAA,CAAAC,OAAA,CAAAhB,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}