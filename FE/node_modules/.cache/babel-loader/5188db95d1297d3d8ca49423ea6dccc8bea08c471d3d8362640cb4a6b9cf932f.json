{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport http from \"@/api/http\";\nimport router from \"@/router\";\nexport default {\n  components: {},\n  data() {\n    return {\n      notice: {\n        noticeTitle: \"\",\n        noticeContent: \"\",\n        createdTime: \"\",\n        hit: \"\"\n      }\n    };\n  },\n  created() {\n    http.get(`/notice/view/${this.$route.params.id}`).then(resp => {\n      this.notice = resp.data;\n    });\n  },\n  methods: {\n    removeNotice() {\n      http.delete(`/notice/${this.$route.params.id}`, {\n        headers: {\n          Authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\")\n        }\n      }).then(resp => {\n        console.log(resp);\n        alert(\"공지사항을 삭제하였습니다.\");\n        router.push({\n          name: \"noticelist\"\n        });\n      }).catch(error => {\n        console.log(error);\n        alert(\"공지사항 삭제를 실패하였습니다.\");\n      });\n    }\n  },\n  computed: {\n    getMemberId() {\n      return this.$store.getters.getMemberId;\n    }\n  }\n};","map":{"version":3,"names":["http","router","components","data","notice","noticeTitle","noticeContent","createdTime","hit","created","get","$route","params","id","then","resp","methods","removeNotice","delete","headers","Authorization","sessionStorage","getItem","console","log","alert","push","name","catch","error","computed","getMemberId","$store","getters"],"sources":["src/components/board/Notice/NoticeView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <b-row class=\"mb-10\">\r\n      <b-col>\r\n        <div class=\"font-weight-bold mb-4\"><h2>공지사항</h2></div>\r\n        <div class=\"text-center\">\r\n          <div class=\"board_wrap\">\r\n            <div class=\"board_view_wrap\">\r\n              <div class=\"board_view\">\r\n                <div class=\"row mt-3 text-left ml-2\">\r\n                  <div class=\"col-6 align-self-center font-weight-bold\" style=\"font-size: 22px\">\r\n                    {{ notice.noticeTitle }}\r\n                  </div>\r\n                </div>\r\n                <div class=\"row ml-2 mt-2 mr-2\">\r\n                  <div\r\n                    class=\"col-6 align-self-center text-left font-weight-bold\"\r\n                    style=\"font-size: 17px; color: silver\"\r\n                  >\r\n                    관리자\r\n                  </div>\r\n                  <div class=\"col-3\"></div>\r\n                  <div class=\"col-3 text-right align-self-center\" style=\"font-size: 17px\">\r\n                    {{ notice.createdTime.substr(0, 10) }}\r\n                  </div>\r\n                </div>\r\n                <!-- <hr style=\"border: solid 0.01px silver\" /> -->\r\n                <hr />\r\n                <div class=\"cont\">\r\n                  {{ notice.noticeContent }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <b-row class=\"float-right mt-3 mr-4\">\r\n            <router-link :to=\"{ name: 'noticemodify', params: this.$route.params.id }\"\r\n              ><b-button\r\n                id=\"btn\"\r\n                class=\"btn btn-lg mx-1\"\r\n                style=\"background-color: orange; border-color: orange\"\r\n                v-if=\"getMemberId === 'admin'\"\r\n                >수정</b-button\r\n              ></router-link\r\n            >\r\n            <b-button\r\n              id=\"btn\"\r\n              class=\"btn btn-lg mx-1\"\r\n              style=\"background-color: orange; border-color: orange\"\r\n              v-if=\"getMemberId === 'admin'\"\r\n              @click=\"removeNotice\"\r\n              >삭제</b-button\r\n            >\r\n            <router-link :to=\"{ name: 'notice' }\"\r\n              ><b-button\r\n                id=\"btn\"\r\n                class=\"btn btn-lg mx-1\"\r\n                style=\"background-color: orange; border-color: orange\"\r\n                >목록</b-button\r\n              ></router-link\r\n            >\r\n          </b-row>\r\n        </div>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport http from \"@/api/http\";\r\nimport router from \"@/router\";\r\n\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      notice: {\r\n        noticeTitle: \"\",\r\n        noticeContent: \"\",\r\n        createdTime: \"\",\r\n        hit: \"\",\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    http.get(`/notice/view/${this.$route.params.id}`).then((resp) => {\r\n      this.notice = resp.data;\r\n    });\r\n  },\r\n  methods: {\r\n    removeNotice() {\r\n      http\r\n        .delete(`/notice/${this.$route.params.id}`, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\"),\r\n          },\r\n        })\r\n        .then((resp) => {\r\n          console.log(resp);\r\n          alert(\"공지사항을 삭제하였습니다.\");\r\n          router.push({ name: \"noticelist\" });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          alert(\"공지사항 삭제를 실패하였습니다.\");\r\n        });\r\n    },\r\n  },\r\n  computed: {\r\n    getMemberId() {\r\n      return this.$store.getters.getMemberId;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.board_wrap {\r\n  width: 100%;\r\n  min-width: 320px;\r\n  padding: 0 30px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.board_page a {\r\n  width: 26px;\r\n  height: 26px;\r\n}\r\n\r\n.board_page a.bt {\r\n  padding-top: 7px;\r\n}\r\n\r\n.board_page a.num {\r\n  padding-top: 6px;\r\n}\r\n\r\n.board_view .info dl {\r\n  width: 50%;\r\n  padding: 0;\r\n}\r\n\r\n.board_view .info dl:nth-child(-n + 2) {\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.board_view .info dl::before {\r\n  display: none;\r\n}\r\n\r\n.board_view .info dl dt,\r\n.board_view .info dl dd {\r\n  font-size: 10px;\r\n}\r\n.board_view {\r\n  width: 100%;\r\n  border-top: 2px solid #000;\r\n  border-bottom: 2px solid #000;\r\n}\r\n\r\n.board_view .title {\r\n  padding: 20px 15px;\r\n  border-bottom: 1px dashed #ddd;\r\n  font-size: 25px;\r\n}\r\n\r\n.board_view .info {\r\n  padding: 15px;\r\n  border-bottom: 1px solid #999;\r\n  font-size: 0;\r\n}\r\n\r\n.board_view .info dl {\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 0 20px;\r\n}\r\n\r\n.board_view .info dl:first-child {\r\n  padding-left: 0;\r\n}\r\n\r\n.board_view .info dl::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 1px;\r\n  left: 0;\r\n  display: block;\r\n  width: 1px;\r\n  height: 13px;\r\n  background: #ddd;\r\n}\r\n\r\n.board_view .info dl:first-child::before {\r\n  display: none;\r\n}\r\n\r\n.board_view .info dl dt,\r\n.board_view .info dl dd {\r\n  display: inline-block;\r\n  font-size: 1.4rem;\r\n}\r\n\r\n.board_view .info dl dd {\r\n  margin-left: 10px;\r\n  color: #777;\r\n}\r\n\r\n.board_view .cont {\r\n  padding: 15px;\r\n  /* border-bottom: 1px solid #000; */\r\n  line-height: 160%;\r\n  font-size: 1.4rem;\r\n}\r\n\r\n.board_view .row mt-3 {\r\n  padding: 15px;\r\n  border-bottom: 1px solid #000;\r\n  line-height: 160%;\r\n}\r\n</style>\r\n"],"mappings":";AAoEA,OAAAA,IAAA;AACA,OAAAC,MAAA;AAEA;EACAC,UAAA;EACAC,KAAA;IACA;MACAC,MAAA;QACAC,WAAA;QACAC,aAAA;QACAC,WAAA;QACAC,GAAA;MACA;IACA;EACA;EACAC,QAAA;IACAT,IAAA,CAAAU,GAAA,sBAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA,IAAAC,IAAA,CAAAC,IAAA;MACA,KAAAX,MAAA,GAAAW,IAAA,CAAAZ,IAAA;IACA;EACA;EACAa,OAAA;IACAC,aAAA;MACAjB,IAAA,CACAkB,MAAA,iBAAAP,MAAA,CAAAC,MAAA,CAAAC,EAAA;QACAM,OAAA;UACAC,aAAA,cAAAC,cAAA,CAAAC,OAAA;QACA;MACA,GACAR,IAAA,CAAAC,IAAA;QACAQ,OAAA,CAAAC,GAAA,CAAAT,IAAA;QACAU,KAAA;QACAxB,MAAA,CAAAyB,IAAA;UAAAC,IAAA;QAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAN,OAAA,CAAAC,GAAA,CAAAK,KAAA;QACAJ,KAAA;MACA;IACA;EACA;EACAK,QAAA;IACAC,YAAA;MACA,YAAAC,MAAA,CAAAC,OAAA,CAAAF,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}