{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"KakaoMap\",\n  computed: {\n    attractionList() {\n      return this.$store.getters.getTempAttractionList;\n    }\n  },\n  watch: {\n    attractionList() {\n      this.markerPositions = [];\n      const attList = this.attractionList;\n      for (let index = 0; index < attList.length; index++) {\n        this.markerPositions.push([attList[index].latitude, attList[index].longitude]);\n      }\n      if (this.markers.length > 0) {\n        this.markers.forEach(marker => marker.setMap(null));\n      }\n      if (this.lines != null) {\n        this.lines.setMap(null);\n      }\n      const positions = this.markerPositions.map(position => new kakao.maps.LatLng(...position));\n      if (positions.length > 0) {\n        let num = 1;\n        this.markers = positions.map(position => new kakao.maps.CustomOverlay({\n          map: this.map,\n          position,\n          content: `<button type=\"button\" class=\"btn btn-dark\">${num++}</button>`\n        }));\n        this.lines = new kakao.maps.Polyline({\n          map: this.map,\n          path: positions,\n          strokeWeight: 3,\n          // 선의 두께입니다 \n          strokeColor: '#db4040',\n          // 선의 색깔입니다\n          strokeOpacity: 1,\n          // 선의 불투명도입니다 0에서 1 사이값이며 0에 가까울수록 투명합니다\n          strokeStyle: 'solid' // 선의 스타일입니다\n        });\n\n        const bounds = positions.reduce((bounds, latlng) => bounds.extend(latlng), new kakao.maps.LatLngBounds());\n        this.map.setBounds(bounds);\n      }\n    }\n  },\n  data() {\n    return {\n      markerPositions: [],\n      markers: [],\n      lines: null,\n      infowindow: null\n    };\n  },\n  mounted() {\n    if (window.kakao && window.kakao.maps) {\n      this.initMap();\n    } else {\n      const script = document.createElement(\"script\");\n      /* global kakao */\n      script.onload = () => kakao.maps.load(this.initMap);\n      script.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=01804873cc789c708a3675143bc91919\";\n      document.head.appendChild(script);\n    }\n  },\n  methods: {\n    initMap() {\n      const container = document.getElementById(\"map\");\n      const options = {\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\n        level: 5\n      };\n\n      //지도 객체를 등록합니다.\n      //지도 객체는 반응형 관리 대상이 아니므로 initMap에서 선언합니다.\n      this.map = new kakao.maps.Map(container, options);\n    },\n    // changeSize(size) {\n    //   const container = document.getElementById(\"map\");\n    //   container.style.width = `${size}px`;\n    //   container.style.height = `${size}px`;\n    //   this.map.relayout();\n    // },\n    // displayMarker(markerPositions) {\n    //   if (this.markers.length > 0) {\n    //     this.markers.forEach((marker) => marker.setMap(null));\n    //   }\n\n    //   const positions = markerPositions.map(\n    //     (position) => new kakao.maps.LatLng(...position)\n    //   );\n\n    //   if (positions.length > 0) {\n    //     this.markers = positions.map(\n    //       (position) =>\n    //         new kakao.maps.Marker({\n    //           map: this.map,\n    //           position,\n    //         })\n    //     );\n\n    //     const bounds = positions.reduce(\n    //       (bounds, latlng) => bounds.extend(latlng),\n    //       new kakao.maps.LatLngBounds()\n    //     );\n\n    //     this.map.setBounds(bounds);\n    //   }\n    // },\n    displayInfoWindow() {\n      if (this.infowindow && this.infowindow.getMap()) {\n        //이미 생성한 인포윈도우가 있기 때문에 지도 중심좌표를 인포윈도우 좌표로 이동시킨다.\n        this.map.setCenter(this.infowindow.getPosition());\n        return;\n      }\n      var iwContent = '<div style=\"padding:5px;\">Hello World!</div>',\n        // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n        iwPosition = new kakao.maps.LatLng(33.450701, 126.570667),\n        //인포윈도우 표시 위치입니다\n        iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\n\n      this.infowindow = new kakao.maps.InfoWindow({\n        map: this.map,\n        // 인포윈도우가 표시될 지도\n        position: iwPosition,\n        content: iwContent,\n        removable: iwRemoveable\n      });\n      this.map.setCenter(iwPosition);\n    }\n  }\n};","map":{"version":3,"names":["name","computed","attractionList","$store","getters","getTempAttractionList","watch","markerPositions","attList","index","length","push","latitude","longitude","markers","forEach","marker","setMap","lines","positions","map","position","kakao","maps","LatLng","num","CustomOverlay","content","Polyline","path","strokeWeight","strokeColor","strokeOpacity","strokeStyle","bounds","reduce","latlng","extend","LatLngBounds","setBounds","data","infowindow","mounted","window","initMap","script","document","createElement","onload","load","src","head","appendChild","methods","container","getElementById","options","center","level","Map","displayInfoWindow","getMap","setCenter","getPosition","iwContent","iwPosition","iwRemoveable","InfoWindow","removable"],"sources":["src/components/board/Plan/plan-item/PlanMap.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"map\"></div>\r\n    <!-- <div class=\"button-group\">\r\n      <button @click=\"changeSize(0)\">Hide</button>\r\n      <button @click=\"changeSize(400)\">show</button>\r\n      <button @click=\"displayMarker(markerPositions1)\">marker set 1</button>\r\n      <button @click=\"displayMarker(markerPositions2)\">marker set 2</button>\r\n      <button @click=\"displayMarker([])\">marker set 3 (empty)</button>\r\n      <button @click=\"displayInfoWindow\">infowindow</button>\r\n    </div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"KakaoMap\",\r\n  computed: {\r\n    attractionList(){\r\n            return this.$store.getters.getTempAttractionList;\r\n        }\r\n  },\r\n  watch: {\r\n    attractionList(){\r\n        this.markerPositions = [];\r\n        \r\n        const attList = this.attractionList;\r\n\r\n        for (let index = 0; index < attList.length; index++) { \r\n            this.markerPositions.push([attList[index].latitude, attList[index].longitude]);\r\n        }\r\n\r\n        if (this.markers.length > 0) {\r\n        this.markers.forEach((marker) => marker.setMap(null));\r\n      }\r\n\r\n      if(this.lines != null) {\r\n        this.lines.setMap(null);\r\n      }\r\n\r\n      const positions = this.markerPositions.map(\r\n        (position) => new kakao.maps.LatLng(...position)\r\n      );\r\n\r\n      if (positions.length > 0) {\r\n        let num = 1;\r\n        this.markers = positions.map(\r\n          (position) =>\r\n            new kakao.maps.CustomOverlay({\r\n              map: this.map,\r\n              position,\r\n              content: `<button type=\"button\" class=\"btn btn-dark\">${num++}</button>`\r\n            })\r\n        );\r\n\r\n        this.lines =  \r\n            new kakao.maps.Polyline({\r\n                map: this.map,\r\n                path: positions,\r\n                strokeWeight: 3, // 선의 두께입니다 \r\n            strokeColor: '#db4040', // 선의 색깔입니다\r\n            strokeOpacity: 1, // 선의 불투명도입니다 0에서 1 사이값이며 0에 가까울수록 투명합니다\r\n            strokeStyle: 'solid' // 선의 스타일입니다\r\n            })\r\n\r\n        const bounds = positions.reduce(\r\n          (bounds, latlng) => bounds.extend(latlng),\r\n          new kakao.maps.LatLngBounds()\r\n        );\r\n\r\n        this.map.setBounds(bounds);\r\n      }\r\n    }\r\n  }\r\n  ,\r\n  data() {\r\n    return {\r\n      markerPositions: [\r\n      ],\r\n      markers: [],\r\n      lines: null,\r\n      infowindow: null,\r\n    };\r\n  },\r\n  mounted() {    \r\n    if (window.kakao && window.kakao.maps) {\r\n      this.initMap();\r\n    } else {\r\n      const script = document.createElement(\"script\");\r\n      /* global kakao */\r\n      script.onload = () => kakao.maps.load(this.initMap);\r\n      script.src =\r\n        \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=01804873cc789c708a3675143bc91919\";\r\n      document.head.appendChild(script);\r\n    }\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      const container = document.getElementById(\"map\");\r\n      const options = {\r\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n        level: 5,\r\n      };\r\n\r\n      //지도 객체를 등록합니다.\r\n      //지도 객체는 반응형 관리 대상이 아니므로 initMap에서 선언합니다.\r\n      this.map = new kakao.maps.Map(container, options);\r\n    },\r\n    // changeSize(size) {\r\n    //   const container = document.getElementById(\"map\");\r\n    //   container.style.width = `${size}px`;\r\n    //   container.style.height = `${size}px`;\r\n    //   this.map.relayout();\r\n    // },\r\n    // displayMarker(markerPositions) {\r\n    //   if (this.markers.length > 0) {\r\n    //     this.markers.forEach((marker) => marker.setMap(null));\r\n    //   }\r\n\r\n    //   const positions = markerPositions.map(\r\n    //     (position) => new kakao.maps.LatLng(...position)\r\n    //   );\r\n\r\n    //   if (positions.length > 0) {\r\n    //     this.markers = positions.map(\r\n    //       (position) =>\r\n    //         new kakao.maps.Marker({\r\n    //           map: this.map,\r\n    //           position,\r\n    //         })\r\n    //     );\r\n\r\n    //     const bounds = positions.reduce(\r\n    //       (bounds, latlng) => bounds.extend(latlng),\r\n    //       new kakao.maps.LatLngBounds()\r\n    //     );\r\n\r\n    //     this.map.setBounds(bounds);\r\n    //   }\r\n    // },\r\n    displayInfoWindow() {\r\n      if (this.infowindow && this.infowindow.getMap()) {\r\n        //이미 생성한 인포윈도우가 있기 때문에 지도 중심좌표를 인포윈도우 좌표로 이동시킨다.\r\n        this.map.setCenter(this.infowindow.getPosition());\r\n        return;\r\n      }\r\n\r\n      var iwContent = '<div style=\"padding:5px;\">Hello World!</div>', // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\r\n        iwPosition = new kakao.maps.LatLng(33.450701, 126.570667), //인포윈도우 표시 위치입니다\r\n        iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\r\n\r\n      this.infowindow = new kakao.maps.InfoWindow({\r\n        map: this.map, // 인포윈도우가 표시될 지도\r\n        position: iwPosition,\r\n        content: iwContent,\r\n        removable: iwRemoveable,\r\n      });\r\n\r\n      this.map.setCenter(iwPosition);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n#map {\r\n  width: 100%;\r\n  height: 100vh;\r\n}\r\n\r\n.button-group {\r\n  margin: 10px 0px;\r\n}\r\n\r\nbutton {\r\n  margin: 0 3px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}