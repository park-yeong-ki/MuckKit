{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport http from \"@/api/http\";\nimport router from \"@/router\";\n// import axios from \"axios\";\n\nexport default {\n  components: {},\n  data() {\n    return {\n      articleContent: \"\",\n      articleTitle: \"\",\n      planId: \"\"\n    };\n  },\n  created() {\n    http.get(`/article/view/${this.$route.params.id}`).then(resp => {\n      this.planId = resp.data.planId;\n      this.articleTitle = resp.data.articleTitle;\n      this.articleContent = resp.data.articleContent;\n    });\n  },\n  methods: {\n    write() {\n      if (this.articleTitle && this.articleContent) {\n        http.put(\"/article/modify\", {\n          articleId: this.$route.params.id,\n          articleTitle: this.articleTitle,\n          articleContent: this.articleContent,\n          articleWriter: this.getMemberId,\n          planId: this.planId\n        }, {\n          headers: {\n            Authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\")\n          }\n        }).then(resp => {\n          console.log(resp);\n          router.push({\n            name: \"articlelist\"\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        alert(\"올바른 입력을 해주세요.\");\n      }\n    },\n    imageUpload() {},\n    remove() {\n      http.delete(\"/article/\" + this.$route.params.id, {\n        headers: {\n          Authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\")\n        }\n      }).then(resp => {\n        console.log(resp);\n        alert(\"여행 후기가 삭제되었습니다.\");\n        router.push({\n          name: \"articlelist\"\n        });\n      }).catch(error => {\n        console.log(error);\n        alert(\"여행 후기 삭제를 실패하였습니다.\");\n      });\n    }\n  },\n  computed: {\n    getMemberId() {\n      return this.$store.getters.getMemberId;\n    }\n  }\n};","map":{"version":3,"names":["http","router","components","data","articleContent","articleTitle","planId","created","get","$route","params","id","then","resp","methods","write","put","articleId","articleWriter","getMemberId","headers","Authorization","sessionStorage","getItem","console","log","push","name","catch","error","alert","imageUpload","remove","delete","computed","$store","getters"],"sources":["src/components/board/Article/ArticleModify.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <b-row class=\"mb-1\">\r\n      <b-col style=\"text-align: left\">\r\n        <b-form-group id=\"userid-group\" label=\"작성자\" label-for=\"userid\">\r\n          <b-form-input\r\n            id=\"userid\"\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"작성자를 입력하세요.\"\r\n            :value=\"getMemberId\"\r\n            :readonly=\"true\"\r\n          ></b-form-input>\r\n        </b-form-group>\r\n\r\n        <b-form-group id=\"subject-group\" label=\"제목\" label-for=\"subject\">\r\n          <b-form-input\r\n            id=\"subject\"\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"제목을 입력하세요.\"\r\n            v-model=\"articleTitle\"\r\n            :value=\"articleContent\"\r\n          ></b-form-input>\r\n        </b-form-group>\r\n\r\n        <b-form-group id=\"content-group\" label=\"내용\" label-for=\"content\">\r\n          <b-form-textarea\r\n            id=\"content\"\r\n            placeholder=\"내용을 입력하세요.\"\r\n            rows=\"10\"\r\n            max-rows=\"15\"\r\n            v-model=\"articleContent\"\r\n          ></b-form-textarea>\r\n        </b-form-group>\r\n        <div class=\"text-right\">\r\n          <router-link :to=\"{ name: 'articlelist' }\"\r\n            ><b-button\r\n              id=\"btn\"\r\n              class=\"btn btn-lg\"\r\n              style=\"background-color: orange; border-color: orange\"\r\n              >취소</b-button\r\n            ></router-link\r\n          >\r\n\r\n          <b-button\r\n            id=\"btn\"\r\n            class=\"btn btn-lg\"\r\n            style=\"background-color: orange; border-color: orange\"\r\n            @click=\"write\"\r\n            >수정</b-button\r\n          >\r\n          <b-button\r\n            id=\"btn\"\r\n            class=\"btn btn-lg\"\r\n            style=\"background-color: orange; border-color: orange\"\r\n            @click=\"remove\"\r\n            >삭제</b-button\r\n          >\r\n        </div>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport http from \"@/api/http\";\r\nimport router from \"@/router\";\r\n// import axios from \"axios\";\r\n\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      articleContent: \"\",\r\n      articleTitle: \"\",\r\n      planId: \"\",\r\n    };\r\n  },\r\n  created() {\r\n    http.get(`/article/view/${this.$route.params.id}`).then((resp) => {\r\n      this.planId = resp.data.planId;\r\n      this.articleTitle = resp.data.articleTitle;\r\n      this.articleContent = resp.data.articleContent;\r\n    });\r\n  },\r\n  methods: {\r\n    write() {\r\n      if (this.articleTitle && this.articleContent) {\r\n        http\r\n          .put(\r\n            \"/article/modify\",\r\n            {\r\n              articleId: this.$route.params.id,\r\n              articleTitle: this.articleTitle,\r\n              articleContent: this.articleContent,\r\n              articleWriter: this.getMemberId,\r\n              planId: this.planId,\r\n            },\r\n            {\r\n              headers: {\r\n                Authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\"),\r\n              },\r\n            }\r\n          )\r\n          .then((resp) => {\r\n            console.log(resp);\r\n            router.push({ name: \"articlelist\" });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        alert(\"올바른 입력을 해주세요.\");\r\n      }\r\n    },\r\n    imageUpload() {},\r\n    remove() {\r\n      http\r\n        .delete(\"/article/\" + this.$route.params.id, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\"),\r\n          },\r\n        })\r\n        .then((resp) => {\r\n          console.log(resp);\r\n          alert(\"여행 후기가 삭제되었습니다.\");\r\n          router.push({ name: \"articlelist\" });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          alert(\"여행 후기 삭제를 실패하였습니다.\");\r\n        });\r\n    },\r\n  },\r\n  computed: {\r\n    getMemberId() {\r\n      return this.$store.getters.getMemberId;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#btn {\r\n  margin-right: 20px;\r\n}\r\n</style>\r\n"],"mappings":";AAkEA,OAAAA,IAAA;AACA,OAAAC,MAAA;AACA;;AAEA;EACAC,UAAA;EACAC,KAAA;IACA;MACAC,cAAA;MACAC,YAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACAP,IAAA,CAAAQ,GAAA,uBAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA,IAAAC,IAAA,CAAAC,IAAA;MACA,KAAAP,MAAA,GAAAO,IAAA,CAAAV,IAAA,CAAAG,MAAA;MACA,KAAAD,YAAA,GAAAQ,IAAA,CAAAV,IAAA,CAAAE,YAAA;MACA,KAAAD,cAAA,GAAAS,IAAA,CAAAV,IAAA,CAAAC,cAAA;IACA;EACA;EACAU,OAAA;IACAC,MAAA;MACA,SAAAV,YAAA,SAAAD,cAAA;QACAJ,IAAA,CACAgB,GAAA,CACA,mBACA;UACAC,SAAA,OAAAR,MAAA,CAAAC,MAAA,CAAAC,EAAA;UACAN,YAAA,OAAAA,YAAA;UACAD,cAAA,OAAAA,cAAA;UACAc,aAAA,OAAAC,WAAA;UACAb,MAAA,OAAAA;QACA,GACA;UACAc,OAAA;YACAC,aAAA,cAAAC,cAAA,CAAAC,OAAA;UACA;QACA,CACA,EACAX,IAAA,CAAAC,IAAA;UACAW,OAAA,CAAAC,GAAA,CAAAZ,IAAA;UACAZ,MAAA,CAAAyB,IAAA;YAAAC,IAAA;UAAA;QACA,GACAC,KAAA,CAAAC,KAAA;UACAL,OAAA,CAAAC,GAAA,CAAAI,KAAA;QACA;MACA;QACAC,KAAA;MACA;IACA;IACAC,YAAA;IACAC,OAAA;MACAhC,IAAA,CACAiC,MAAA,oBAAAxB,MAAA,CAAAC,MAAA,CAAAC,EAAA;QACAS,OAAA;UACAC,aAAA,cAAAC,cAAA,CAAAC,OAAA;QACA;MACA,GACAX,IAAA,CAAAC,IAAA;QACAW,OAAA,CAAAC,GAAA,CAAAZ,IAAA;QACAiB,KAAA;QACA7B,MAAA,CAAAyB,IAAA;UAAAC,IAAA;QAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAL,OAAA,CAAAC,GAAA,CAAAI,KAAA;QACAC,KAAA;MACA;IACA;EACA;EACAI,QAAA;IACAf,YAAA;MACA,YAAAgB,MAAA,CAAAC,OAAA,CAAAjB,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}